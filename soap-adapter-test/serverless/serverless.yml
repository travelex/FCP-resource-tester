service: soap-adapter-test

plugins:
  localPath: "/usr/local/lib/node_modules/"
  modules:
    - serverless-prune-plugin
    - serverless-plugin-existing-s3
    - ./../../common/serverless/plugins/no-logs-group

custom:
  fromTerraform: ${file(../../common/serverless/sls_terraform_outputs.js)}
  prune:
    automatic: true
    number: 1

provider:
  name: aws
  runtime: ${self:custom.fromTerraform.node_runtime}
  memorySize: 128
  stage: ${opt:stage}
  region: ${self:custom.fromTerraform.middleware_region}
  stackName: sls-${self:service}-${opt:stage, self:provider.stage}-stack
  stackTags: ${self:custom.fromTerraform.middleware_common_tags}
  tags: ${self:custom.fromTerraform.middleware_common_tags}
  vpc:
    securityGroupIds:
      - ${self:custom.fromTerraform.middleware_lambda_security_group_id}
    subnetIds: ${self:custom.fromTerraform.aws_subnet_ids}
  iamManagedPolicies: ${self:custom.fromTerraform.middleware_lambda_iam_staging_data_policy_arns}
  deploymentBucket:
    name: ${self:custom.fromTerraform.middleware_deployment_bucket_name}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ssm:GetParameter*
        - ssm:DescribeParameter*
      Resource:
        - "arn:aws:ssm:${self:custom.fromTerraform.middleware_region, 'eu-west-1'}:${self:custom.fromTerraform.middleware_aws_account_id, '0'}:parameter/middleware-${opt:stage}-*"


functions: ${file(./configs/functions/functions.yml)}

