service: vpn-telnet-test

plugins:
  localPath: "/usr/local/lib/node_modules/"
  modules:
    - serverless-prune-plugin
    - ./../../common/serverless/plugins/no-logs-group

custom:
  fromTerraform: ${file(../../common/serverless/sls_terraform_outputs.js)}
  prune:
    automatic: true
    number: 1

provider:
  name: aws
  runtime: ${self:custom.fromTerraform.node_runtime}
  stage: ${opt:stage}
  region: ${self:custom.fromTerraform.middleware_region}
  stackName: sls-${self:service}-${opt:stage, self:provider.stage}-stack
  stackTags: ${self:custom.fromTerraform.middleware_common_tags}
  tags: ${self:custom.fromTerraform.middleware_common_tags}
  vpc:
    securityGroupIds:
      - ${self:custom.fromTerraform.middleware_lambda_security_group_id}
    subnetIds: ${self:custom.fromTerraform.aws_subnet_ids}
  deploymentBucket:
    name: ${self:custom.fromTerraform.middleware_deployment_bucket_name}
  apiGateway:
    restApiId: ${self:custom.fromTerraform.middleware_private_api_gateway_id}
    restApiRootResourceId: ${self:custom.fromTerraform.middleware_private_api_gateway_root_resource_id}
  logs:
    restApi: "${self:custom.fromTerraform.middleware_private_api_gateway_logs_enabled}"
  environment: ${file(./configs/${self:provider.name}-${opt:stage, self:provider.stage}.yml)}
  iamManagedPolicies: ${self:custom.fromTerraform.middleware_lambda_iam_policy_arns}

functions:
  telnet:
    name: ${self:service}-telnet-${opt:stage, self:provider.stage}
    handler: src/handlers/${self:provider.name}/handler.telnet
    timeout: 30
    package:
      include:
        - src/handlers/${self:provider.name}/handler.js
    events:
      - http:
          path: telnet
          method: post
          async: false
          private: true

  dbCheck:
    name: ${self:service}-dbCheck-${opt:stage, self:provider.stage}
    handler: src/handlers/${self:provider.name}/handler.dbCheck
    timeout: 30
    package:
      include:
        - src/handlers/${self:provider.name}/handler.js
    events:
      - http:
          path: dbCheck
          method: post
          async: true
          private: true

  samba:
    name: ${self:service}-samba-${opt:stage, self:provider.stage}
    handler: src/handlers/${self:provider.name}/samba.handle
    timeout: 30
    package:
      include:
        - src/handlers/${self:provider.name}/samba.js
    events:
      - http:
          path: samba/{mode}
          method: post
          async: false
          private: true

  mysqlCheck:
    name: ${self:service}-mysqlCheck-${opt:stage, self:provider.stage}
    handler: src/handlers/${self:provider.name}/handler.mysqlExecuteQuery
    timeout: 30
    package:
      include:
        - src/handlers/${self:provider.name}/handler.js
    events:
      - http:
          path: mysqlCheck
          method: post
          async: true
          private: true

  mssqlExecuteQuery:
    name: ${self:service}-mssqlExecuteQuery-${opt:stage, self:provider.stage}
    handler: src/handlers/${self:provider.name}/handler.mssqlExecuteQuery
    timeout: 600
    package:
      include:
        - src/handlers/${self:provider.name}/handler.js

  mssqlInstanceCheck:
    name: ${self:service}-mssqlInstanceCheck-${opt:stage, self:provider.stage}
    handler: src/handlers/${self:provider.name}/handler.mssqlInstanceCheck
    timeout: 100
    package:
      include:
        - src/handlers/${self:provider.name}/handler.js
    events:
      - http:
          path: mssqlInstanceCheck
          method: post
          async: true
          private: true          

  deleteFromRDS:
    name: ${self:service}-deleteFromRDS-${opt:stage, self:provider.stage}
    handler: src/handlers/${self:provider.name}/handler.deleteFromRDS
    timeout: 30
    package:
      include:
        - src/handlers/${self:provider.name}/handler.js
    events:
      - http:
          path: deleteFromRDS
          method: post
          # async: true
          # private: true

  
  restAPICall:
    name: ${self:service}-restAPICall-${opt:stage, self:provider.stage}
    handler: src/handlers/${self:provider.name}/handler.restAPICall
    timeout: 600
    package:
      include:
        - src/handlers/${self:provider.name}/handler.js
    events:
      - http:
          path: restAPICall
          method: post
          async: true
          private: true
